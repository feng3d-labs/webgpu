import"../../../modulepreload-polyfill-3cfb730f.js";import{G as F}from"../../../dat.gui.module-5ea4ba08.js";import{v as e,m as l}from"../../../wgpu-matrix.module-82499b8f.js";import{c as U,a as S,b as O,d as _,e as j}from"../../../cube-9c7624af.js";import{W as E,r as L}from"../../../Buffer-5212487c.js";class P{constructor(){this.matrix_=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),this.view_=l.create(),this.right_=new Float32Array(this.matrix_.buffer,4*0,4),this.up_=new Float32Array(this.matrix_.buffer,4*4,4),this.back_=new Float32Array(this.matrix_.buffer,4*8,4),this.position_=new Float32Array(this.matrix_.buffer,4*12,4)}get matrix(){return this.matrix_}set matrix(t){l.copy(t,this.matrix_)}get view(){return this.view_}set view(t){l.copy(t,this.view_)}get right(){return this.right_}set right(t){e.copy(t,this.right_)}get up(){return this.up_}set up(t){e.copy(t,this.up_)}get back(){return this.back_}set back(t){e.copy(t,this.back_)}get position(){return this.position_}set position(t){e.copy(t,this.position_)}}class I extends P{constructor(t){if(super(),this.pitch=0,this.yaw=0,this.velocity_=e.create(),this.movementSpeed=10,this.rotationSpeed=1,this.frictionCoefficient=.99,t&&(t.position||t.target)){const a=t.position??e.create(0,0,-5),s=t.target??e.create(0,0,0),r=e.normalize(e.sub(a,s));this.recalculateAngles(r),this.position=a}}get velocity(){return this.velocity_}set velocity(t){e.copy(t,this.velocity_)}get matrix(){return super.matrix}set matrix(t){super.matrix=t,this.recalculateAngles(this.back)}update(t,a){const s=(d,f)=>(d?1:0)-(f?1:0);this.yaw-=a.analog.x*t*this.rotationSpeed,this.pitch-=a.analog.y*t*this.rotationSpeed,this.yaw=B(this.yaw,Math.PI*2),this.pitch=R(this.pitch,-Math.PI/2,Math.PI/2);const r=e.copy(this.position);super.matrix=l.rotateX(l.rotationY(this.yaw),this.pitch);const n=a.digital,i=s(n.right,n.left),c=s(n.up,n.down),h=e.create(),m=s(n.backward,n.forward);return e.addScaled(h,this.right,i,h),e.addScaled(h,this.up,c,h),e.addScaled(h,this.back,m,h),e.normalize(h,h),e.mulScalar(h,this.movementSpeed,h),this.velocity=T(h,this.velocity,Math.pow(1-this.frictionCoefficient,t)),this.position=e.addScaled(r,this.velocity,t),this.view=l.invert(this.matrix),this.view}recalculateAngles(t){this.yaw=Math.atan2(t[0],t[2]),this.pitch=-Math.asin(t[1])}}class W extends P{constructor(t){super(),this.distance=0,this.angularVelocity=0,this.axis_=e.create(),this.rotationSpeed=1,this.zoomSpeed=.1,this.frictionCoefficient=.999,t&&t.position&&(this.position=t.position,this.distance=e.len(this.position),this.back=e.normalize(this.position),this.recalcuateRight(),this.recalcuateUp())}get axis(){return this.axis_}set axis(t){e.copy(t,this.axis_)}get matrix(){return super.matrix}set matrix(t){super.matrix=t,this.distance=e.len(this.position)}update(t,a){a.analog.touching?this.angularVelocity=0:this.angularVelocity*=Math.pow(1-this.frictionCoefficient,t);const r=e.create();e.addScaled(r,this.right,a.analog.x,r),e.addScaled(r,this.up,-a.analog.y,r);const n=e.cross(r,this.back),i=e.len(n);i>1e-7&&(this.axis=e.scale(n,1/i),this.angularVelocity=i*this.rotationSpeed);const c=this.angularVelocity*t;return c>1e-7&&(this.back=e.normalize(K(this.back,this.axis,c)),this.recalcuateRight(),this.recalcuateUp()),a.analog.zoom!==0&&(this.distance*=1+a.analog.zoom*this.zoomSpeed),this.position=e.scale(this.back,this.distance),this.view=l.invert(this.matrix),this.view}recalcuateRight(){this.right=e.normalize(e.cross(this.up,this.back))}recalcuateUp(){this.up=e.normalize(e.cross(this.back,this.right))}}function R(o,t,a){return Math.min(Math.max(o,t),a)}function B(o,t){return o-Math.floor(Math.abs(o)/t)*t*Math.sign(o)}function K(o,t,a){return e.transformMat4Upper3x3(o,l.rotation(t,a))}function T(o,t,a){return e.addScaled(o,e.sub(t,o),a)}const k=`struct Uniforms {
  modelViewProjectionMatrix : mat4x4f,
}

@group(0) @binding(0) var<uniform> uniforms : Uniforms;
@group(0) @binding(1) var mySampler: sampler;
@group(0) @binding(2) var myTexture: texture_2d<f32>;

struct VertexOutput {
  @builtin(position) Position : vec4f,
  @location(0) fragUV : vec2f,
}

@vertex
fn vertex_main(
  @location(0) position : vec4f,
  @location(1) uv : vec2f
) -> VertexOutput {
  return VertexOutput(uniforms.modelViewProjectionMatrix * position, uv);
}

@fragment
fn fragment_main(@location(0) fragUV: vec2f) -> @location(0) vec4f {
  return textureSample(myTexture, mySampler, fragUV);
}
`;function G(o,t){const a={forward:!1,backward:!1,left:!1,right:!1,up:!1,down:!1},s={x:0,y:0,zoom:0};let r=!1;const n=(i,c)=>{switch(i.code){case"KeyW":a.forward=c,i.preventDefault(),i.stopPropagation();break;case"KeyS":a.backward=c,i.preventDefault(),i.stopPropagation();break;case"KeyA":a.left=c,i.preventDefault(),i.stopPropagation();break;case"KeyD":a.right=c,i.preventDefault(),i.stopPropagation();break;case"Space":a.up=c,i.preventDefault(),i.stopPropagation();break;case"ShiftLeft":case"ControlLeft":case"KeyC":a.down=c,i.preventDefault(),i.stopPropagation();break}};return o.addEventListener("keydown",i=>n(i,!0)),o.addEventListener("keyup",i=>n(i,!1)),t.style.touchAction="pinch-zoom",t.addEventListener("pointerdown",()=>{r=!0}),t.addEventListener("pointerup",()=>{r=!1}),t.addEventListener("pointermove",i=>{r=i.pointerType==="mouse"?(i.buttons&1)!==0:!0,r&&(s.x+=i.movementX,s.y+=i.movementY)}),t.addEventListener("wheel",i=>{r=(i.buttons&1)!==0,r&&(s.zoom+=Math.sign(i.deltaY),i.preventDefault(),i.stopPropagation())},{passive:!1}),()=>{const i={digital:a,analog:{x:s.x,y:s.y,zoom:s.zoom,touching:r}};return s.x=0,s.y=0,s.zoom=0,i}}const H=async(o,t)=>{const a=G(window,o),s=e.create(3,2,5),r={arcball:new W({position:s}),WASD:new I({position:s})},n={type:"arcball"};let i=n.type;t.add(n,"type",["arcball","WASD"]).onChange(()=>{const p=n.type;r[p].matrix=r[i].matrix,i=p});const c=window.devicePixelRatio||1;o.width=o.clientWidth*c,o.height=o.clientHeight*c;const h=await new E().init(),m={position:{data:S,format:"float32x4",offset:O,arrayStride:_},uv:{data:S,format:"float32x2",offset:j,arrayStride:_}},d={vertex:{code:k},fragment:{code:k},primitive:{topology:"triangle-list",cullFace:"back"},depthStencil:{depthWriteEnabled:!0,depthCompare:"less"}},f={size:[o.width,o.height],format:"depth24plus"};let x;{const p=await fetch("../../../assets/img/Di-3d.png"),u=await createImageBitmap(await p.blob());x={size:[u.width,u.height],format:"rgba8unorm",sources:[{image:u}]}}const V={magFilter:"linear",minFilter:"linear"},y={uniforms:{modelViewProjectionMatrix:new Float32Array(16)},mySampler:V,myTexture:{texture:x}},M={pipeline:d,bindingResources:y,vertices:m,draw:{__type__:"DrawVertex",vertexCount:U}},A={commandEncoders:[{passEncoders:[{descriptor:{colorAttachments:[{view:{texture:{context:{canvasId:o.id}}},clearValue:[.5,.5,.5,1],loadOp:"clear",storeOp:"store"}],depthStencilAttachment:{view:{texture:f},depthClearValue:1,depthLoadOp:"clear",depthStoreOp:"store"}},renderPassObjects:[M]}]}]},z=o.width/o.height,D=l.perspective(2*Math.PI/5,z,1,100),w=l.create();function C(p){const g=r[n.type].update(p,a());return l.multiply(D,g,w),w}let b=Date.now();function v(){const p=Date.now(),u=(p-b)/1e3;b=p;const g=C(u);L(y.uniforms).modelViewProjectionMatrix=new Float32Array(g),h.submit(A),requestAnimationFrame(v)}requestAnimationFrame(v)},Y=new F,q=document.getElementById("webgpu");H(q,Y);
