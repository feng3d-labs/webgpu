import"../../../modulepreload-polyfill-3cfb730f.js";import{W as y,r as P}from"../../../Buffer-23ffa079.js";import{m as o,v as m}from"../../../wgpu-matrix.module-82499b8f.js";import{c as C,a as p,b as V,d as l,e as O}from"../../../cube-9c7624af.js";import{b as q}from"../../../basic.vert-5cd75182.js";const A=`@fragment
fn main() -> @location(0) vec4f {
  return vec4(0.0, 0.0, 0.0, 1.0);
}`;class j{constructor(){this.sampleCount=0,this.accumulated=0,this.accumulatedSq=0}addSample(r){this.sampleCount+=1,this.accumulated+=r,this.accumulatedSq+=r*r}getAverage(){return this.sampleCount===0?0:this.accumulated/this.sampleCount}getStddev(){if(this.sampleCount===0)return 0;const r=this.getAverage(),i=this.accumulatedSq/this.sampleCount-r*r;return Math.sqrt(Math.max(0,i))}}const D=async t=>{const r=new j,i={onSupports:e=>{e||(n.innerHTML="Timestamp queries are not supported")},onQuery:e=>{const a=Number(e)*1e-6;r.addSample(a),n.innerHTML=`Render Pass duration: ${r.getAverage().toFixed(3)} ms Â± ${r.getStddev().toFixed(3)} ms`}},s=window.devicePixelRatio||1;t.width=t.clientWidth*s,t.height=t.clientHeight*s;const h=await new y().init(),f={canvasId:t.id},n=document.querySelector("#info pre"),g={position:{data:p,format:"float32x4",offset:V,arrayStride:l},uv:{data:p,format:"float32x2",offset:O,arrayStride:l}},c={modelViewProjectionMatrix:null},x={vertex:{code:q},fragment:{code:A},primitive:{topology:"triangle-list",cullFace:"back"},depthStencil:{depthWriteEnabled:!0,depthCompare:"less"}},b={size:[t.width,t.height],format:"depth24plus"},w={commandEncoders:[{passEncoders:[{descriptor:{colorAttachments:[{view:{texture:{context:f}},clearValue:[.95,.95,.95,1],loadOp:"clear",storeOp:"store"}],depthStencilAttachment:{view:{texture:b},depthClearValue:1,depthLoadOp:"clear",depthStoreOp:"store"},timestampQuery:i},renderPassObjects:[{pipeline:x,bindingResources:{uniforms:c},vertices:g,draw:{__type__:"DrawVertex",vertexCount:C}}]}]}]},S=t.width/t.height,v=o.perspective(2*Math.PI/5,S,1,100),d=o.create();function M(){const e=o.identity();o.translate(e,m.fromValues(0,0,-4),e);const a=Date.now()/1e3;return o.rotate(e,m.fromValues(Math.sin(a),Math.cos(a),0),1,e),o.multiply(v,e,d),d}function u(){const e=M();P(c).modelViewProjectionMatrix=e.subarray(),h.submit(w),requestAnimationFrame(u)}requestAnimationFrame(u)},W=document.getElementById("webgpu");D(W);
