import{v as f}from"./wgpu-matrix.module-82499b8f.js";const O={vertexStride:8*4,positionsOffset:0,normalOffset:3*4,uvOffset:6*4};function A(x,c=32,a=16,I=0){const e=[],u=[];c=Math.max(3,Math.floor(c)),a=Math.max(2,Math.floor(a));const y=f.create(),s=f.create(),l=f.create();let P=0;const p=[];for(let o=0;o<=a;o++){const r=[],n=o/a;let i=0;o===0?i=.5/c:o===a&&(i=-.5/c);for(let t=0;t<=c;t++){const M=t/c;if(t===c)f.copy(y,s);else if(t===0||o!==0&&o!==a){const v=x+(Math.random()-.5)*2*I*x;s[0]=-v*Math.cos(M*Math.PI*2)*Math.sin(n*Math.PI),s[1]=v*Math.cos(n*Math.PI),s[2]=v*Math.sin(M*Math.PI*2)*Math.sin(n*Math.PI),t===0&&f.copy(s,y)}e.push(...s),f.copy(s,l),f.normalize(l,l),e.push(...l),e.push(M+i,1-n),r.push(P++)}p.push(r)}for(let o=0;o<a;o++)for(let r=0;r<c;r++){const n=p[o][r+1],i=p[o][r],t=p[o+1][r],M=p[o+1][r+1];o!==0&&u.push(n,i,M),o!==a-1&&u.push(i,t,M)}return{vertices:new Float32Array(e),indices:new Uint16Array(u)}}export{O as S,A as c};
